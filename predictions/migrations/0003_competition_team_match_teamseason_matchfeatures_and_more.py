# Generated by Django 5.1 on 2024-09-19 08:52

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("predictions", "0002_league"),
    ]

    operations = [
        migrations.CreateModel(
            name="Competition",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "tsapi_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="TSAPI ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Competition Name"),
                ),
                (
                    "domestic_scale",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Domestic Scale"
                    ),
                ),
                (
                    "international_scale",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="International Scale"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Status"
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Format"
                    ),
                ),
                (
                    "division",
                    models.IntegerField(blank=True, null=True, verbose_name="Division"),
                ),
                (
                    "no_home_away",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="No Home and Away",
                    ),
                ),
                (
                    "starting_year",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2100),
                        ],
                        verbose_name="Starting Year",
                    ),
                ),
                (
                    "ending_year",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2100),
                        ],
                        verbose_name="Ending Year",
                    ),
                ),
                (
                    "women",
                    models.BooleanField(
                        default=False, verbose_name="Women's Competition"
                    ),
                ),
                (
                    "continent",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Continent"
                    ),
                ),
                (
                    "comp_master_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Competition Master ID"
                    ),
                ),
                ("image", models.URLField(max_length=500, verbose_name="Image URL")),
                (
                    "local_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="competition_images/",
                        verbose_name="Local Image",
                    ),
                ),
                (
                    "shortHand",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Short Hand"
                    ),
                ),
                (
                    "iso",
                    models.CharField(
                        blank=True, max_length=14, null=True, verbose_name="ISO"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Type"
                    ),
                ),
                (
                    "footystats_url",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Footystats URL",
                    ),
                ),
                (
                    "season",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Season"
                    ),
                ),
                ("slug", models.SlugField(blank=True, null=True)),
                (
                    "matches_last_updated",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Matches Last Updated"
                    ),
                ),
                (
                    "matchdetails_last_updated",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Match Details Last Updated"
                    ),
                ),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competitions",
                        to="predictions.league",
                        verbose_name="League",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Competitions",
                "ordering": ["season", "name"],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, verbose_name="Team Name")),
                (
                    "clean_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Clean Name"
                    ),
                ),
                (
                    "english_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="English Name",
                    ),
                ),
                (
                    "short_hand",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Short Hand"
                    ),
                ),
                (
                    "founded",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Founded Year"
                    ),
                ),
                ("image", models.URLField(max_length=500, verbose_name="Image URL")),
                (
                    "local_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="team_images/",
                        verbose_name="Local Image",
                    ),
                ),
                (
                    "flag_element",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Flag Element",
                    ),
                ),
                ("url", models.URLField(max_length=500, verbose_name="URL")),
                (
                    "full_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Full Name"
                    ),
                ),
                (
                    "alt_names",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Alternative Names"
                    ),
                ),
                (
                    "official_sites",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Official Sites"
                    ),
                ),
                ("slug", models.SlugField(blank=True, null=True)),
                (
                    "data_last_updated",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Data Update"
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="predictions.country",
                        verbose_name="Country",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Teams",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "date_unix",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Date Unix"
                    ),
                ),
                ("season", models.CharField(max_length=255, verbose_name="Season")),
                (
                    "status",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Status"
                    ),
                ),
                (
                    "game_week",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Game Week"
                    ),
                ),
                (
                    "home_goals",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Home Goals"
                    ),
                ),
                (
                    "away_goals",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Away Goals"
                    ),
                ),
                (
                    "total_goals",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Total Goals"
                    ),
                ),
                (
                    "match_stats",
                    models.JSONField(blank=True, null=True, verbose_name="Match Stats"),
                ),
                (
                    "team_a_stats",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Team A Stats"
                    ),
                ),
                (
                    "team_b_stats",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Team B Stats"
                    ),
                ),
                (
                    "odds",
                    models.JSONField(blank=True, null=True, verbose_name="Odds Data"),
                ),
                (
                    "attendance",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Attendance"
                    ),
                ),
                (
                    "stadium_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Stadium Name",
                    ),
                ),
                (
                    "stadium_location",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Stadium Location",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches",
                        to="predictions.competition",
                        verbose_name="Competition",
                    ),
                ),
                (
                    "awayteam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="away_matches",
                        to="predictions.team",
                        verbose_name="Away Team",
                    ),
                ),
                (
                    "hometeam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_matches",
                        to="predictions.team",
                        verbose_name="Home Team",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Matches",
                "ordering": ["date_unix"],
            },
        ),
        migrations.CreateModel(
            name="TeamSeason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("season", models.CharField(max_length=255, verbose_name="Season")),
                (
                    "clean_season",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Clean Season",
                    ),
                ),
                (
                    "table_position",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Table Position"
                    ),
                ),
                (
                    "performance_rank",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Performance Rank"
                    ),
                ),
                (
                    "risk",
                    models.IntegerField(blank=True, null=True, verbose_name="Risk"),
                ),
                (
                    "season_format",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Season Format",
                    ),
                ),
                (
                    "stats",
                    models.JSONField(blank=True, null=True, verbose_name="Stats"),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="predictions.competition",
                        verbose_name="Competition",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seasons",
                        to="predictions.team",
                        verbose_name="Team",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Team Seasons",
                "ordering": ["team", "season"],
            },
        ),
        migrations.CreateModel(
            name="MatchFeatures",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hmpo",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Home Matches Played Overall",
                    ),
                ),
                (
                    "hmph",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Home Matches Played Home"
                    ),
                ),
                (
                    "ampo",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Away Matches Played Overall",
                    ),
                ),
                (
                    "ampa",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Away Matches Played Away"
                    ),
                ),
                (
                    "h2hmp",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="H2H Matches Played"
                    ),
                ),
                (
                    "hga",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Home Goals Average"
                    ),
                ),
                (
                    "aga",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Away Goals Average"
                    ),
                ),
                (
                    "hgaa",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Home Goals Against Average"
                    ),
                ),
                (
                    "agaa",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Away Goals Against Average"
                    ),
                ),
                (
                    "hxga",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Home Expected Goals Average",
                    ),
                ),
                (
                    "axga",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Away Expected Goals Average",
                    ),
                ),
                (
                    "hxgaa",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Home Expected Goals Against Average",
                    ),
                ),
                (
                    "axgaa",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Away Expected Goals Against Average",
                    ),
                ),
                (
                    "hpa",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Home Possession Average"
                    ),
                ),
                (
                    "apa",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Away Possession Average"
                    ),
                ),
                (
                    "hw",
                    models.FloatField(blank=True, null=True, verbose_name="Home Wins"),
                ),
                (
                    "aw",
                    models.FloatField(blank=True, null=True, verbose_name="Away Wins"),
                ),
                (
                    "hd",
                    models.FloatField(blank=True, null=True, verbose_name="Home Draws"),
                ),
                (
                    "ad",
                    models.FloatField(blank=True, null=True, verbose_name="Away Draws"),
                ),
                (
                    "hl",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Home Losses"
                    ),
                ),
                (
                    "al",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Away Losses"
                    ),
                ),
                (
                    "hsota",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Home Shots on Target Average",
                    ),
                ),
                (
                    "asota",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Away Shots on Target Average",
                    ),
                ),
                (
                    "hsoffta",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Home Shots off Target Average",
                    ),
                ),
                (
                    "asoffta",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Away Shots off Target Average",
                    ),
                ),
                (
                    "agl5h",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Average Goals Last 5 Matches Home",
                    ),
                ),
                (
                    "agl5a",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Average Goals Last 5 Matches Away",
                    ),
                ),
                (
                    "agh2h",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Average Goals in H2H Matches",
                    ),
                ),
                (
                    "bttsh2h",
                    models.FloatField(
                        blank=True, null=True, verbose_name="BTTS in H2H Matches"
                    ),
                ),
                (
                    "ach2h",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Average Corners in H2H Matches",
                    ),
                ),
                (
                    "tfhw",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Teamform Home Wins"
                    ),
                ),
                (
                    "tfhd",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Teamform Home Draws"
                    ),
                ),
                (
                    "tfhl",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Teamform Home Losses"
                    ),
                ),
                (
                    "tfaw",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Teamform Away Wins"
                    ),
                ),
                (
                    "tfad",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Teamform Away Draws"
                    ),
                ),
                (
                    "tfal",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Teamform Away Losses"
                    ),
                ),
                (
                    "match",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features",
                        to="predictions.match",
                        verbose_name="Match",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Match Features",
                "ordering": ["match"],
                "indexes": [
                    models.Index(
                        fields=["match"], name="predictions_match_i_212d9a_idx"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="match",
            index=models.Index(
                fields=["competition"], name="predictions_competi_4526fb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="match",
            index=models.Index(
                fields=["hometeam"], name="predictions_hometea_c1c2aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="match",
            index=models.Index(
                fields=["awayteam"], name="predictions_awaytea_1e3072_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="match",
            index=models.Index(fields=["season"], name="predictions_season_b86c6f_idx"),
        ),
        migrations.AddIndex(
            model_name="teamseason",
            index=models.Index(fields=["team"], name="predictions_team_id_127652_idx"),
        ),
        migrations.AddIndex(
            model_name="teamseason",
            index=models.Index(
                fields=["competition"], name="predictions_competi_42aa55_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="teamseason",
            constraint=models.UniqueConstraint(
                fields=("team", "competition"), name="unique_team_competition"
            ),
        ),
    ]
